{"version":3,"sources":["touches.js","simulation.js","App.js","reportWebVitals.js","index.js"],"names":["Touches","this","touches","isMouseDown","lastMouseX","lastMouseY","mouseVX","mouseVY","e","seen","now","performance","i","length","eTouch","id","identifier","lastTime","touch","vx","clientX","lastX","vy","clientY","lastY","Object","keys","preventDefault","map","touchID","idx","DopplerSimulation","circles","time","lastID","dt","needsFiltering","circle","x","y","r","vr","filter","push","transformedSpectrum","stops","spec","offset","color","transformSpectrum","spectrum","appTouches","TouchManager","appSimulation","Simulation","App","useWindowSize","width","height","useState","setCircles","useEffect","timerID","pulseID","onStart","onMove","onEnd","onMouseDown","mouseDown","onMouseMove","mouseMove","onMouseUp","mouseUp","lastUpdate","console","log","document","addEventListener","passive","window","requestAnimationFrame","update","next","getCircles","setTimeout","pulse","getTouches","addCircle","removeEventListener","cancelAnimationFrame","clearTimeout","viewport","style","stopColor","angle","Math","atan2","PI","cx","cy","fill","stroke","opacity","strokeWidth","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.424d97da.chunk.js","sourcesContent":["const MOUSE_ID = \"mouse\";\nexport default class Touches {\n  constructor() {\n    this.touches = {};\n    this.isMouseDown = false;\n    this.lastMouseX = 0;\n    this.lastMouseY = 0;\n    this.mouseVX = 0;\n    this.mouseVY = 0;\n  }\n\n  touch(e) {\n    let seen = {};\n    const now = performance.now();\n    for(let i = 0; i < e.touches.length; i++) {\n      const eTouch = e.touches[i];\n      const id = eTouch.identifier;\n      seen[id] = true;\n      if(this.touches[id]) {\n        if(now-this.touches[id].lastTime > 0) {\n          const touch = this.touches[id];\n          touch.vx = (eTouch.clientX-touch.lastX)/(now-touch.lastTime);\n          touch.vy = (eTouch.clientY-touch.lastY)/(now-touch.lastTime);\n          touch.lastX = eTouch.clientX;\n          touch.lastY = eTouch.clientY;\n          touch.lastTime = now;\n        }\n      } else {\n        const touch = {\n          lastX: eTouch.clientX,\n          lastY: eTouch.clientY,\n          vx: 0,\n          vy: 0,\n          lastTime: now\n        };\n        this.touches[id] = touch;\n      }\n    }\n    const keys = Object.keys(this.touches);\n    for(let id of keys) {\n      if(!seen[id]) {\n        delete this.touches[id];\n      }\n    }\n    e.preventDefault();\n  }\n\n  getTouches() {\n    return Object.keys(this.touches).map((touchID, idx) => {\n      const touch = this.touches[touchID];\n      return { id: touchID, ...touch };\n    });\n  }\n\n  mouseDown(e) {\n    this.touches[MOUSE_ID] = { vx: 0, vy: 0, lastX: e.clientX, lastY: e.clientY, lastTime: performance.now() };\n    this.isMouseDown = true;\n    e.preventDefault();\n  }\n  mouseMove(e) {\n    if(this.isMouseDown) {\n      const now = performance.now();\n      const touch = this.touches[MOUSE_ID];\n      if(now-touch.lastTime > 0) {\n        touch.vx = (e.clientX-touch.lastX)/(now-touch.lastTime);\n        touch.vy = (e.clientY-touch.lastY)/(now-touch.lastTime);\n        touch.lastX = e.clientX;\n        touch.lastY = e.clientY;\n        touch.lastTime = now;\n      }\n    }\n    e.preventDefault();\n  }\n  mouseUp(e) {\n    this.isMouseDown = false;\n    if(this.touches[MOUSE_ID]) {\n      delete this.touches[MOUSE_ID];\n    }\n    e.preventDefault();\n  }\n};\n","export default class DopplerSimulation {\n  constructor() {\n    this.circles = [];\n    this.time = 0;\n    this.lastID = 0;\n  }\n\n  next(dt) {\n    this.time += dt;\n    let needsFiltering = false;\n    for(let i = 0; i < this.circles.length; i++) {\n      const circle = this.circles[i];\n      circle.x += circle.vx*dt;\n      circle.y += circle.vy*dt;\n      circle.r += circle.vr*dt;\n      circle.time += dt;\n      if(circle.time > 2) {\n        needsFiltering = true;\n      }\n    }\n    if(needsFiltering) {\n      this.circles = this.circles.filter((circle) => circle.time <= 2);\n    }\n  }\n\n  addCircle(x, y, r, vx, vy, vr) {\n    const id = this.lastID+1;\n    this.circles.push({ x, y, r, vx, vy, vr, id, time: 0 });\n\n    this.lastID = id;\n  }\n\n  getCircles() {\n    return [ ...this.circles ];\n  }\n};\n","import { useEffect, useState } from 'react';\nimport { useWindowSize } from '@react-hook/window-size';\nimport TouchManager from './touches';\nimport Simulation from './simulation';\nimport spectrum from './spectrum.json';\n\nconst transformSpectrum = (stops) => {\n  const spec = [];\n  for(let i = 14; i < stops.length-20; i++) {\n    const {\n      offset, color\n    } = stops[i];\n// we could transform the color here too, but leaving it for now\n    spec.push({ offset: (offset-.189189)/(0.729730-.18918), color });\n  }\n  /*\n  for(let i = stops.length-2; i >= 0; i--) {\n    const {\n      offset, color\n    } = stops[i];\n// we could transform the color here too, but leaving it for now\n    spec.push({ offset: .5+(1-offset)*.5, color });\n  }\n  */\n\n  return spec;\n};\n\nconst transformedSpectrum = transformSpectrum(spectrum);\n\nconst appTouches = new TouchManager();\nconst appSimulation = new Simulation();\n\nfunction App() {\n  const [ width, height ] = useWindowSize();\n//  const [ touches, setTouches ] = useState([]);\n  const [ circles, setCircles ] = useState([]);\n\n//  const setCircles = () => {};\n//  const circles = [ { x: 100, y: 100, vx: 0, vy: 0, vr: 10, r: 100, time: 0 } ];\n  \n\n  useEffect(() => {\n    const onStart = (e) => {\n      appTouches.touch(e);\n      //setTouches(appTouches.getTouches());\n    };\n    const onMove = (e) => {\n      appTouches.touch(e);\n      //setTouches(appTouches.getTouches());\n    };\n    const onEnd = (e) => {\n      appTouches.touch(e);\n      //setTouches(appTouches.getTouches());\n    };\n    const onMouseDown = (e) => {\n      appTouches.mouseDown(e);\n      //setTouches(appTouches.getTouches());\n    };\n    const onMouseMove = (e) => {\n      appTouches.mouseMove(e);\n      //setTouches(appTouches.getTouches());\n    };\n    const onMouseUp = (e) => {\n      appTouches.mouseUp(e);\n      //setTouches(appTouches.getTouches());\n    };\n    let timerID;\n    let lastUpdate = performance.now();\n    const update = () => {\n      const now = performance.now();\n      const dt = (now-lastUpdate)/1000;\n      appSimulation.next(dt);\n      setCircles(appSimulation.getCircles());\n      timerID = window.requestAnimationFrame(update);\n      lastUpdate = now;\n    };\n\n    let pulseID;\n    const pulsePeriod = 250;\n    const pulse = () => {\n      const touches = appTouches.getTouches();\n      for(let touch of touches) {\n        appSimulation.addCircle(touch.lastX, touch.lastY, 0, touch.vx, touch.vy, 300);\n      }\n      pulseID = setTimeout(pulse, pulsePeriod);\n    };\n    console.log(\"Adding...\");\n    document.addEventListener('mousedown', onMouseDown, { passive: false });\n    document.addEventListener('mousemove', onMouseMove, { passive: false });\n    document.addEventListener('mouseup', onMouseUp, { passive: false });\n    document.addEventListener('touchstart', onStart, { passive: false })\n    document.addEventListener('touchmove', onMove, { passive: false });\n    document.addEventListener('touchend', onEnd, { passive: false });\n    timerID = window.requestAnimationFrame(update);\n\n    pulseID = setTimeout(pulse, pulsePeriod);\n\n    return () => {\n      console.log(\"Removing...\");\n      document.removeEventListener('mousedown', onMouseDown);\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      document.removeEventListener('touchstart', onStart);\n      document.removeEventListener('touchmove', onMove);\n      document.removeEventListener('touchend', onEnd);\n      window.cancelAnimationFrame(timerID);\n      clearTimeout(pulseID);\n    }\n  }, []);\n  return (\n  <svg width={width} height={height} viewport={\"0 0 \" + width + \" \" + height}>\n  <linearGradient id=\"spectrum\">\n    { transformedSpectrum.map(({ offset, color }) => <stop key={offset} offset={offset} style={ { stopColor: \"rgb(\" + color[0]*255 + \",\" + color[1]*255 + \",\" + color[2]*255 + \")\" } }/>) }\n  </linearGradient>\n  {/* touches.map((touch, idx) => <text key={touch.id} x={10} y={20+20*idx}>{touch.id} - {touch.lastX},{touch.lastY},{touch.vx},{touch.vy}</text>) */}\n  { circles.map((circle) => {\n      let angle = 180;\n      if((circle.vx*circle.vx+circle.vy*circle.vy) > .00001) {\n        angle = Math.atan2(circle.vy, circle.vx)*180/Math.PI+180;\n      }\n      return <circle key={circle.id} cx={circle.x} cy={circle.y} r={circle.r} fill=\"none\" stroke=\"url(#spectrum)\" opacity={((2-circle.time)/2)*((2-circle.time)/2)} strokeWidth={10} transform={\"rotate(\" + angle + \",\" + circle.x + \",\" + circle.y + \")\"} />\n    }) }\n  </svg>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}